@using System.Collections.Immutable
@using System.Text
@using Fluxor
@inherits Fluxor.Blazor.Web.Components.FluxorComponent


<div class="area ">

    <div class="word">
        @foreach (var path in State.Value.WordList.Paths)
        {
            var style = path.GetStyle(State.Value.Config, State.Value.StepConfigs);

            <span class="letter" style="@style">@path.Rune</span>
        }
    </div>

</div>


<style>

    @@import url('https://fonts.googleapis.com/css2?family=Share+Tech+Mono&display=swap');
    .area {
        position: relative;
        font-size: @(State.Value.Config.FontPixels + "px");
        height: @(State.Value.Config.GetHeight(State.Value.StepConfigs) + "px");
        width: @(State.Value.Config.GetWidth(State.Value.WordList) +"px");
    }

    .word {
        position: absolute;
        top:@(((State.Value.Config.GetHeight(State.Value.StepConfigs) - State.Value.Config.FontPixels) / 2) + "px");
        left: @(State.Value.Config.FontPixels + "px");
    }

    .letter {
         position: absolute;
        font-family: 'Share Tech Mono', monospace, sans-serif;
    }



    @foreach (var path in State.Value.WordList.Paths)
    {
        <text>
            @path.GetAnimationDefinition(State.Value.Config,State.Value.StepConfigs, State.Value.WordList.WordLengths)
        </text>
    }



</style>


@code {

    [Inject]
    private IState<State> State { get; set; } = null!;

}